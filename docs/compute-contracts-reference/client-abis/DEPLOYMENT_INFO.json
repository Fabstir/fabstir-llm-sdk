{
  "network": "Base Sepolia",
  "chainId": 84532,
  "lastUpdated": "2025-01-28",
  "status": "Host-Controlled Pricing Enabled - Multi-Chain Support with Price Validation",
  "contracts": {
    "JobMarketplaceWithModels": {
      "address": "0x462050a4a551c4292586D9c1DE23e3158a9bF3B3",
      "previousAddress": "0xdEa1B47872C27458Bb7331Ade99099761C4944Dc",
      "deploymentDate": "2025-01-28",
      "deploymentBlock": 32051983,
      "transactionHash": "0x3bcc5230fcae239023cc822e7bedd4fbd34d4b77d5fff9fc43e3763582e0b104",
      "gasUsed": 3549893,
      "status": "ACTIVE - HOST-CONTROLLED PRICING",
      "features": [
        "NEW: Host-controlled pricing validation (100-100,000 range)",
        "NEW: Contract-level price enforcement (client price >= host minimum)",
        "NEW: Price validation in all session creation functions",
        "NEW: Works with NodeRegistryWithModels 7-field struct",
        "30-second dispute window (configurable via constructor)",
        "ETH/USDC deposit parity (removed 10x multiplier)",
        "accumulatedTreasuryNative for multi-chain support",
        "withdrawTreasuryNative() replaces withdrawTreasuryETH()",
        "Wallet-agnostic deposit/withdrawal functions",
        "createSessionFromDeposit for pre-funded sessions",
        "Anyone-can-complete pattern for gasless ending",
        "ChainConfig for multi-chain support",
        "Enhanced event indexing",
        "depositor field for wallet tracking",
        "Compatible with NodeRegistryWithModels 6-field struct",
        "FIXED: Properly calls creditEarnings() in HostEarnings",
        "ProofSystem configured at 0x2ACcc60893872A499700908889B38C5420CBcFD1",
        "Authorized in HostEarnings contract",
        "Validates host has supported models",
        "User refunds fixed",
        "Treasury fee accumulation",
        "Host earnings accumulation WITH PROPER TRACKING",
        "USDC payment settlement working",
        "90% host / 10% treasury distribution",
        "ETH payments working",
        "Session jobs with proof checkpoints",
        "EZKL proof verification",
        "80% total gas savings"
      ]
    },
    "ModelRegistry": {
      "address": "0x92b2De840bB2171203011A6dBA928d855cA8183E",
      "deploymentDate": "2025-01-13",
      "status": "ACTIVE - MVP MODELS ONLY",
      "features": [
        "Two-tier approval system",
        "SHA256 hash verification",
        "FAB token voting for proposals",
        "Emergency model deactivation",
        "ONLY 2 approved models for MVP"
      ],
      "approvedModels": [
        {
          "name": "TinyVicuna-1B-32k",
          "repo": "CohereForAI/TinyVicuna-1B-32k-GGUF",
          "file": "tiny-vicuna-1b.q4_k_m.gguf",
          "hash": "0x329d002bc20d4e7baae25df802c9678b5a4340b3ce91f23e6a0644975e95935f"
        },
        {
          "name": "TinyLlama-1.1B Chat",
          "repo": "TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF",
          "file": "tinyllama-1b.Q4_K_M.gguf",
          "hash": "0x45b71fe98efe5f530b825dce6f5049d738e9c16869f10be4370ab81a9912d4a6"
        }
      ]
    },
    "NodeRegistryWithModels": {
      "address": "0xC8dDD546e0993eEB4Df03591208aEDF6336342D7",
      "previousAddress": "0x2AA37Bb6E9f0a5d0F3b2836f3a5F656755906218",
      "deploymentDate": "2025-01-28",
      "deploymentBlock": 32051950,
      "transactionHash": "0xb33fed7ebb85ae915928620a198ef77e5648bf85518c60140adf9150a7175e51",
      "gasUsed": 1863700,
      "status": "ACTIVE - HOST-CONTROLLED PRICING ENABLED",
      "features": [
        "NEW: Host-controlled pricing (minPricePerToken field)",
        "NEW: updatePricing() for dynamic price updates",
        "NEW: getNodePricing() for price discovery",
        "NEW: getNodeFullInfo() returns 7 fields (added pricing)",
        "NEW: PricingUpdated event",
        "NEW: Price range validation (100-100,000)",
        "Model validation via ModelRegistry",
        "Structured JSON metadata",
        "Model-to-node mapping",
        "API endpoint discovery",
        "FAB token staking",
        "1000 FAB minimum stake"
      ]
    },
    "NodeRegistryFAB": {
      "address": "0x039AB5d5e8D5426f9963140202F506A2Ce6988F9",
      "previousAddress": "0xb212F4e62a2F3BA36048054Fe75e3d0b0d61EB44",
      "deploymentDate": "2025-01-09",
      "status": "DEPRECATED - Use NodeRegistryWithModels",
      "features": [
        "Legacy registration without model validation"
      ]
    },
    "HostEarnings": {
      "address": "0x908962e8c6CE72610021586f85ebDE09aAc97776",
      "deploymentDate": "2025-01-05",
      "status": "ACTIVE - MULTI-CHAIN READY",
      "authorizedMarketplace": "0x462050a4a551c4292586D9c1DE23e3158a9bF3B3",
      "features": [
        "Batch withdrawal for hosts",
        "Multi-token support (Native + USDC)",
        "Multi-chain compatible (ETH on Base, BNB on opBNB)",
        "Gas-efficient accumulation pattern",
        "creditEarnings() properly called by JobMarketplace"
      ]
    },
    "ProofSystem": {
      "address": "0x2ACcc60893872A499700908889B38C5420CBcFD1",
      "deploymentDate": "2025-01-04",
      "status": "ACTIVE - FIXED",
      "features": [
        "Internal verification function fixed",
        "USDC session proof verification working",
        "Batch verification support",
        "Minimum 64-byte proof requirement"
      ]
    }
  },
  "tokens": {
    "FAB": {
      "address": "0xC78949004B4EB6dEf2D66e49Cd81231472612D62",
      "decimals": 18,
      "usage": "Governance and host staking"
    },
    "USDC": {
      "address": "0x036CbD53842c5426634e7929541eC2318f3dCF7e",
      "decimals": 6,
      "usage": "Job payments",
      "minimumDeposit": 800000,
      "minimumDepositFormatted": "0.80 USDC"
    }
  },
  "platform": {
    "treasury": "0xbeaBB2a5AEd358aA0bd442dFFd793411519Bdc11",
    "feePercent": 2.5,
    "hostPercent": 97.5,
    "minStake": "1000000000000000000000",
    "minStakeFormatted": "1000 FAB"
  },
  "apiDiscovery": {
    "description": "Hosts can now register with API URLs for automatic discovery",
    "functions": {
      "registerNodeWithUrl": "Register new host with API endpoint",
      "updateApiUrl": "Update existing host's API endpoint",
      "getNodeApiUrl": "Get host's API endpoint URL",
      "getNodeFullInfo": "Get all host information including API URL"
    },
    "example": {
      "registration": "nodeRegistry.registerNodeWithUrl('llama-2-7b,inference', 'http://host.com:8080')",
      "update": "nodeRegistry.updateApiUrl('https://new-host.com:8443')",
      "discovery": "nodeRegistry.getNodeApiUrl(hostAddress)"
    }
  },
  "treasuryFunctions": {
    "withdrawTreasuryNative": "Withdraw accumulated native token fees (ETH/BNB)",
    "withdrawTreasuryTokens": "Withdraw accumulated token fees",
    "withdrawAllTreasuryFees": "Batch withdraw all fees",
    "accumulatedTreasuryNative": "View accumulated native tokens",
    "accumulatedTreasuryTokens": "View accumulated tokens"
  },
  "migrationNotes": {
    "forHosts": "CRITICAL: Must re-register with pricing parameter. Call registerNode() with minPricePerToken (100-100,000 range). Existing hosts on old contract cannot migrate - must re-register with new contract.",
    "forClients": "CRITICAL: Update SDK to new contract addresses. Session creation now validates client pricePerToken >= host minPricePerToken. Query pricing before creating sessions.",
    "breakingChanges": [
      "NodeRegistry getNodeFullInfo() now returns 7 fields instead of 6 (added minPricePerToken)",
      "registerNode() now requires minPricePerToken parameter (4th parameter)",
      "Session creation enforces price validation - will revert if price below host minimum",
      "NO MIGRATION PATH from old contracts - hosts must re-register"
    ],
    "pricingFeatures": {
      "priceRange": "100 to 100,000 (0.0001 to 0.1 USDC per token)",
      "validation": "Contract enforces client price >= host minimum",
      "discovery": "Use getNodePricing(host) or getNodeFullInfo(host)[6]",
      "updates": "Hosts call updatePricing(newPrice) to change pricing dynamically"
    }
  },
  "rpcEndpoints": [
    "https://sepolia.base.org",
    "https://base-sepolia.g.alchemy.com/v2/YOUR_API_KEY"
  ]
}